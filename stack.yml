version: '3.3'

networks:
  api:
    external: true

  proxy:
    external: true

services:

  api:
    image: brewgorithm/brewgorithm-api:${TAG:-latest}
    environment:
      RATEBEER_DB_USERNAME: ratebeer_db_username
      RATEBEER_DB_PASSWORD: ratebeer_db_password
      AWS_ID_SECRET: brewgorithm_aws_id
      AWS_KEY_SECRET: brewgorithm_aws_key
      WRITE_API: 0
    networks:
      - api
      - proxy
    deploy:
      replicas: 5
      labels:
        - com.df.notify=true
        - com.df.port=5000
        - com.df.servicePath=/model
        - com.df.reqPathSearch=/model
        - com.df.serviceDomain=${SERVICE_DOMAIN}
        - com.df.alertName.1=resptimeabove
        - com.df.alertIf.1=@resp_time_above:0.1,5m,0.99
        - com.df.alertName.2=resptimebelow_unless_resptimeabove
        - com.df.alertIf.2=sum(rate(http_server_resp_time_bucket{job="brewgorithm_api",le="0.025"}[5m])) / sum(rate(http_server_resp_time_count{job="brewgorithm_api"}[5m])) > 0.75 unless sum(rate(http_server_resp_time_bucket{job="brewgorithm_api",le="0.1"}[5m])) / sum(rate(http_server_resp_time_count{job="brewgorithm_api"}[5m])) < 0.99
        - com.df.alertLabels.2=receiver=system,service=brewgorithm_api,scale=down,type=service
        - com.df.alertAnnotations.2=summary=Response time of service brewgorithm_api is below 0.025 and not above 0.1
        - com.df.scaleUpBy=2
        - com.df.scaleDownBy=1
        - com.df.scaleMin=2
        - com.df.scaleMax=10
        - com.df.reschedule=true
      mode: replicated
      placement:
        constraints:
          - node.role == worker
      resources:
        reservations:
          memory: 1G
        limits:
          memory: 1G
    secrets:
      - ratebeer_db_username
      - ratebeer_db_password
      - brewgorithm_aws_id
      - brewgorithm_aws_key


  write-api:
    image: brewgorithm/brewgorithm-api:${TAG:-latest}
    environment:
      RATEBEER_DB_USERNAME: ratebeer_db_username
      RATEBEER_DB_PASSWORD: ratebeer_db_password
      AWS_ID_SECRET: brewgorithm_aws_id
      AWS_KEY_SECRET: brewgorithm_aws_key
      WRITE_API: 1
    networks:
      - api
      - proxy
    deploy:
      mode: replicated
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.port=5000
        - com.df.servicePath=/write-model
        - com.df.reqPathSearch=/write-model
        - com.df.serviceDomain=${SERVICE_DOMAIN}
        - com.df.alertName=memlimit
        - com.df.alertIf=@service_mem_limit:0.8
        - com.df.alertFor=30s
      placement:
        constraints:
          - node.role == worker
          - node.labels.for == brewgorithm-ai-worker
      resources:
        reservations:
          memory: 6G
        limits:
          memory: 6G
    secrets:
      - ratebeer_db_username
      - ratebeer_db_password
      - brewgorithm_aws_id
      - brewgorithm_aws_key

secrets:
  ratebeer_db_username:
    external: true
  ratebeer_db_password:
    external: true
  brewgorithm_aws_id:
    external: true
  brewgorithm_aws_key:
    external: true
